
app.use(express.static('public'))


const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    // Specify the directory where you want to store the uploaded files
    cb(null, './uploads'); // You should create a 'uploads' directory in your project
  },
  filename: function (req, file, cb) {
    // Generate a unique filename for the uploaded file
    cb(null, file.fieldname+ "_" + Date.now() + path.extname(file.originalname));
  },
});
// Create a Multer instance
const upload = multer({ storage: storage });

 const {name, price, category, number, email}=req.body
    const product = new Product({
      name,
      price,
      category,
      number,
      email,
    });

Frontend AddProduct.js code 
 const formData=new FormData() 
  formData.append('name', name);
  formData.append('price', price);
  formData.append('category', category);
  formData.append('number', number);
  formData.append('email', email);
  formData.append('image', file);

   // const [input,setInput]=useState({
  //       name:"",
  //       price:null,
  //       category:"",
  //       number:null,
  //       email:""
  //   })


   const verifyPassword = async () => {
    // Send a request to the backend to verify the password
    try {
      const response = await axios.post('http://localhost:4500/verify-password', {
        password: passwordVerifation, // Send the entered password to the backend
      });
      return response.data.passwordVerified; // Assuming the backend returns a boolean
    } catch (error) {
      console.error('Error verifying password:', error);
      return false;
    }
  };

  app.post('/verify-password', verifyToken, async (req, res) => {
  try {
    // Fetch the user's data based on the authenticated user's information (e.g., email)
    const user = await Product.findOne({ email: req.user.email });

    // Compare the provided password with the user's stored password
    const passwordMatch = user && user.password === req.body.password;

    res.send({ passwordVerified: passwordMatch });
  } catch (error) {
    console.error('Error verifying password:', error);
    res.status(500).send({ passwordVerified: false });
  }
});
  
  const [file,setFile]=useState()

    // const getUser = async () => {
    //   try {
    //     const response = await axios.get("http://localhost:4500/recentImages");
    //     console.log("Response:", response.data); // Check the response data
    //     seturlLink(response.data)
    //   } catch (error) {
    //     console.error("Error retrieving recent images:", error);
    //   }
    // };
    
    // useEffect(() => {
    //   getUser();
    // }, []);

    // const getUserImage = async () => {
    //   try {
    //     const user = JSON.parse(localStorage.getItem('userData'));
    //     if (user) {
    //       const userId = user._id; // Get the user's ID
    //       const response = await axios.get(`http://localhost:4500/userImage/${userId}`);
    //       console.log("User's Image:", response);
    //     } else {
    //       console.log("User data not found in local storage.");
    //     }
    //   } catch (error) {
    //     console.error("Error retrieving user's image:", error);
    //   }
    // };
    
    // useEffect(() => {
    //   getUserImage();
    // }, []);

     {hideForm && <form onSubmit={handleSubmit}>
          <input type='file' onChange={(e)=>setImage(e.target.files[0])}/>
          <button type='submit' class="btn btn-primary">Upload Profile</button>
          </form>}
          {  
          urlLink.map((url)=>{
            return (
              <span style={{
                display: 'flex',
                width: '250px', // Adjust the width as needed
                height: '250px', // Adjust the height as needed
                borderRadius: '50%',
                justifyContent: 'center',
                boxShadow: '20px 20px 50px grey',
                alignItems: 'center', // Center the image vertically
                overflow: 'hidden', // Hide any overflow
              }}>
                <img
                  src={'http://localhost:4500/' + url.image}
                  alt="User Profile"
                  style={{
                    display: 'block',
                    borderRadius: '50%',
                    maxWidth: '100%',
                    maxHeight: '100%',
                  }}
                />
              </span>
              

            )
          })
          }

          const [image,setImage]=useState()
    const [hideForm,sethideForm]=useState(true)
    const [urlLink,seturlLink]=useState([])
    const handleSubmit=async (e)=>{
      e.preventDefault()
       const formData=new FormData()
       formData.append("image",image)
      const request=await axios.post("http://localhost:4500/images",formData)
      const response=await request.data
      seturlLink(response)
        sethideForm(false)
       
    }


     {/* {product.map((product) => (
      <>
      <div key={product._id} className="card" style={{width:'25vw'}}>
        <div className="card-body d-flex flex-column gap-2 ">
          <img src={`http://localhost:4500/${product.image}`} alt="error" class='card-img-top'/>
           <span className="card-title">Name: {product.name}</span>
           <span onClick={()=>deleteCard(product._id) } style={{position:'absolute',right:'2.8rem',top:'0.5rem',fontSize:'1.5rem',cursor:'pointer',color:'red'}}><BsTrash/></span>
          <span style={{position:'absolute',right:'0.5rem',top:'0.5rem',fontSize:'1.5rem',cursor:'pointer'}}><Link to={"/update/"+product._id}><BsPencil/></Link></span> 
          <span>Category: {product.category}</span>
          <span>â‚¹ {product.price}</span>
          <div className="d-flex align-items-center">
            <MDBIcon icon="envelope" className="me-2" /> 
            <span>{product.email}</span>
          </div>
          <span ><HiOutlineLocationMarker fontSize={'1.5rem'}/>{product.address}</span>
          <p ></p>
          <button className="btn btn-warning mt-auto position-absolute fixed-bottom " style={{zIndex:'1'}} ><MDBIcon icon="phone" className="me-3" /><Link to={`tel:${product.number}`} style={{textDecoration:'none',color:'white'}}>Call Now</Link></button>
        </div>
      </div>
      </>
    ))} */}
    
