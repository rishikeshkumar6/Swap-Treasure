app.post('/images',upload.single("image"),async (req,res)=>{
  console.log(req.file)
  try{const result=await image.insertMany({image:req.file.filename,timestamp: new Date()})
      res.send(result)

  }catch(err){
       console.log(err)
       res.send(err)
  }
})




// app.get('/recentImages', async (req, res) => {
//   try {
//     const recentImages = await image.find()
//       .sort({ timestamp: -1 }) // Sort in descending order
//       .limit(10); // Adjust the limit as needed
//     res.send(recentImages);
//   } catch (err) {
//     console.error('Error retrieving recent images:', err);
//     res.status(500).send('Internal Server Error');
//   }
// });

app.get('/userImage/:userId', async (req, res) => {
  try {
    const userId = req.params.userId;
    const userImage = await image.findOne({ userId }).sort({ timestamp: -1 });
    res.send(userImage);
  } catch (err) {
    console.error("Error retrieving user's image:", err);
    res.status(500).send('Internal Server Error');
  }
});

app.post('/images',upload.single("image"),async (req,res)=>{
  console.log(req.file)
  try{const result=await image.insertMany({image:req.file.filename,timestamp: new Date()})
      res.send(result)

  }catch(err){
       console.log(err)
       res.send(err)
  }
})




// app.get('/recentImages', async (req, res) => {
//   try {
//     const recentImages = await image.find()
//       .sort({ timestamp: -1 }) // Sort in descending order
//       .limit(10); // Adjust the limit as needed
//     res.send(recentImages);
//   } catch (err) {
//     console.error('Error retrieving recent images:', err);
//     res.status(500).send('Internal Server Error');
//   }
// });

app.get('/userImage/:userId', async (req, res) => {
  try {
    const userId = req.params.userId;
    const userImage = await image.findOne({ userId }).sort({ timestamp: -1 });
    res.send(userImage);
  } catch (err) {
    console.error("Error retrieving user's image:", err);
    res.status(500).send('Internal Server Error');
  }
});